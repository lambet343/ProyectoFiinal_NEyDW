"""
Django settings for PartyPack project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Define el directorio base del proyecto, se utiliza para construir rutas relativas a archivos y carpetas
BASE_DIR = Path(__file__).resolve().parent.parent


# Configuración rápida para el desarrollo - no es adecuada para producción
# Para más detalles sobre el despliegue en producción, revisa la documentación de Django
SECRET_KEY = 'django-insecure-%dak&#+qted1b4!#r&tw*$yb_nu#p=3-u2fg%vt$7s&!^!trk#'  # La clave secreta que debe mantenerse oculta

# Activar el modo de depuración, no usar en producción
DEBUG = True

# Define los hosts que pueden acceder al servidor (vacío por defecto para desarrollo local)
ALLOWED_HOSTS = []


# Definición de las aplicaciones instaladas (apps de Django y nuestras propias aplicaciones)
INSTALLED_APPS = [
    'django.contrib.admin',  # Aplicación de administración de Django
    'django.contrib.auth',   # Gestión de usuarios y autenticación
    'django.contrib.contenttypes',  # Permite usar el sistema de modelos
    'django.contrib.sessions',  # Maneja las sesiones de usuario
    'django.contrib.messages',  # Permite mostrar mensajes flash
    'django.contrib.staticfiles',  # Maneja archivos estáticos como CSS y JS
    'PartyPack',  # Nuestra propia aplicación 'PartyPack'
]

# URL para redirigir si el usuario no está autenticado
LOGIN_URL = '/login/'

# Middleware que se ejecuta en cada solicitud
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Protege contra CSRF
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Administra la autenticación de usuarios
    'django.contrib.messages.middleware.MessageMiddleware',  # Maneja mensajes de feedback al usuario
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Protege contra clickjacking
]

# Configuración de la URL raíz para las vistas
ROOT_URLCONF = 'PartyPack.urls'

# Configuración de plantillas (HTML) en Django
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Motor de plantillas de Django
        'DIRS': [
            BASE_DIR / 'templates',  # Carpeta de plantillas del proyecto
        ],
        'APP_DIRS': True,  # Busca plantillas dentro de las aplicaciones
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # Información de depuración
                'django.template.context_processors.request',  # Datos de solicitud HTTP
                'django.contrib.auth.context_processors.auth',  # Información sobre el usuario autenticado
                'django.contrib.messages.context_processors.messages',  # Mensajes flash
            ],
        },
    },
]

# Definición de la aplicación WSGI
WSGI_APPLICATION = 'PartyPack.wsgi.application'


# Configuración de la base de datos
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # Motor de base de datos (SQLite en este caso)
        'NAME': BASE_DIR / 'db.sqlite3',  # Ubicación de la base de datos en el sistema de archivos
    }
}


# Validación de contraseñas (fortaleza)
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Valida similitudes entre nombre y contraseña
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # Contraseña debe tener una longitud mínima
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # Evita contraseñas comunes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # Evita contraseñas solo numéricas
    },
]


# Configuración de internacionalización y zona horaria
LANGUAGE_CODE = 'en-us'  # Idioma por defecto
TIME_ZONE = 'UTC'  # Zona horaria por defecto

USE_I18N = True  # Habilita la internacionalización (i18n)
USE_TZ = True  # Habilita el uso de zonas horarias

# Configuración de archivos estáticos (CSS, JavaScript, imágenes)
STATIC_URL = '/static/'  # URL donde se servirán los archivos estáticos
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # Carpeta donde se guardan los archivos estáticos

# Tipo de campo de clave primaria por defecto
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Configuración para enviar correos electrónicos (usando el servidor SMTP de Gmail en este caso)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Utiliza el backend SMTP para enviar correos
EMAIL_HOST = 'smtp.gmail.com'  # Servidor SMTP de Gmail
EMAIL_PORT = 587  # Puerto para TLS (conexión segura)
EMAIL_USE_TLS = True  # Habilita TLS para seguridad en la conexión
EMAIL_HOST_USER = 'partypackfi343@gmail.com'  # Usuario de correo
EMAIL_HOST_PASSWORD = 'rooc uzug aeaa jlkc'  # Contraseña para el correo (usando App Passwords en Gmail)
